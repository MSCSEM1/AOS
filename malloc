#include <stdio.h> 
#include <stdlib.h> 
int main() 
{ 
 int *arr; 
 int n; 
 printf("Enter the number of elements: "); 
 scanf("%d", &n); 
 arr = (int *)malloc(n * sizeof(int));
 if (arr == NULL) 
   {
     printf("Failed to allocate memory using malloc!\n"); 
     return 1; 
   } 
 printf("Memory allocated using malloc. Enter %d elements:\n", n); 
 for (int i = 0; i < n; i++) 
 { 
   scanf("%d", &arr[i]);
 } 
 printf("Array elements after malloc:\n"); 
 for (int i = 0; i < n; i++)
 { 
   printf("%d ", arr[i]);
 } 
 printf("\n"); 
 free(arr); 
 
 arr = (int *)calloc(n, sizeof(int)); 
 if (arr == NULL) 
 { 
   printf("Memory allocation using calloc failed!\n"); 
   return 1; 
 } 
 printf("Memory allocated using calloc. All elements initialized to 0:\n"); 
 for (int i = 0; i < n; i++) 
 { 
   printf("%d ", arr[i]);
 } 
 
 printf("Enter the new size of the array: "); 
 scanf("%d", &n); 
 arr = (int *)realloc(arr, n * sizeof(int));
 if (arr == NULL) 
 { 
   printf("Memory reallocation failed!\n"); 
   return 1; 
 } 
 printf("Memory reallocated using realloc. Enter %d more elements:\n", n); 
 for (int i = 0; i < n; i++) 
 { 
   arr[i] = i + 1; 
 } 
 printf("Array elements after realloc:\n"); 
 for (int i = 0; i < n; i++) 
 { 
   printf("%d ", arr[i]); 
 } 
 printf("\n"); 
 free(arr); 
 printf("Memory freed.\n"); 
 return 0; 
} 
